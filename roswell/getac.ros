#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -m getac -L sbcl-bin -- $0 "$@"
|#
(progn ;;init forms
  (ros:ensure-asdf)
  #+quicklisp (ql:quickload '(#:getac) :silent t))

(defpackage #:getac/roswell/getac.ros
  (:use #:cl
        #:getac/cli))
(in-package #:getac/roswell/getac.ros)

(defun print-usage (&key (quit t))
  (format *error-output*
          "~&Usage: getac [options] [file]~2%OPTIONS:~%")
  (print-options-usage *error-output*)
  (when quit
    (uiop:quit -1)))

(defoption "test" (:short "t") (file)
  "Specify a file to read test cases. (Default: '*.in')"
  (list :test file))

(defoption "filetype" (:short "f") (type)
  "File type to test. The default will be detected by the file extension."
  (list :filetype type))

(defoption "disable-colors" () ()
  "Turn off colors."
  (setf getac:*enable-colors* nil)
  (values))

(defoption "version" (:short "V") ()
  "Print version."
  (format *error-output* "~&v~A~%" (asdf:component-version (asdf:find-system '#:getac)))
  (uiop:quit -1))

(defoption "help" (:short "h") ()
  "Show help."
  (print-usage :quit t))

(defun main (&rest argv)
  (unless argv
    (print-usage))
  (multiple-value-bind (options argv)
      (handler-case (parse-argv argv)
        (cli-error (e)
          (format *error-output* "~&~A~%" e)
          (print-usage)
          (uiop:quit -1)))
    (let ((filename (pop argv)))
      (unless filename
        (format *error-output* "~&Missing a file to text.~%")
        (print-usage))
      (when argv
        (format *error-output* "Extra arguments: ~{~A~^ ~}~%" argv)
        (print-usage))

      (or (handler-case (apply #'getac:run filename options)
            (simple-error (e)
                          (format *error-output* "~&~A~%" e)
                          nil)
            (error (e)
                   (format *error-output* "~&~A: ~A~%" (type-of e) e)
                   nil))
          (uiop:quit -1)))))
;;; vim: set ft=lisp lisp:
